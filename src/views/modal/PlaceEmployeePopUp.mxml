<?xml version="1.0" encoding="utf-8"?>

<!-- Интерфейс для приписки к базе -->

<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:dropDownList="com.flextras.mobile.dropDownList.*"
               creationComplete="creationCompleteHandler(event)">
	
	<s:BorderContainer>
		<s:layout>
			<s:VerticalLayout paddingLeft="1" paddingRight="1" paddingTop="1" paddingBottom="1" gap="10"/>
		</s:layout>
		
		<s:BorderContainer width="100%" minHeight="0" backgroundColor="gray" borderVisible="false">
			<s:layout>
				<s:VerticalLayout paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5" horizontalAlign="center"/>
			</s:layout>
			
			<s:Label text="@Resource(key='place.popup.title', bundle='common')" color="white"/>
		</s:BorderContainer>
		
		<s:VGroup gap="7" paddingLeft="5" paddingRight="5" paddingTop="0" paddingBottom="5">
            <dropDownList:DropDownList id="baseSelector" width="100%" dataProvider="{basesList}"
                                       labelField="baseName"/>
			
			<s:HGroup width="100%">
				<s:Button label="@Resource(key='place.popup.move', bundle='common')" width="50%" minWidth="120"
						  enabled="{isOtherBaseSelected(baseSelector.selectedItem as BaseVO)}"
						  click="{close(false, Const.OK);}"/>
				
				<s:Button label="@Resource(key='new.base.popup.cancel', bundle='common')" width="50%" minWidth="120"
						  click="{close(false, Const.CANCEL);}"/>
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
            import mx.collections.ArrayCollection;
            import mx.events.FlexEvent;
            
            import dictionary.Const;
            
            import vo.BaseVO;
			
			//--------------------------------------------------------------------------
			// 
			//--------------------------------------------------------------------------
            
            private var _basesList:ArrayCollection;
            
            public var employeeId:String;
            
            private var _selectedBaseId:String;
			
            //--------------------------------------------------------------------------
            // 
            //--------------------------------------------------------------------------
            
            [Bindable (event="basesListChanged")]
            public function get basesList():ArrayCollection
            {
                return _basesList;
            }
            
            public function set basesList(value:ArrayCollection):void
            {
                if (value == _basesList)
                    return;
                
                _basesList = value;
                dispatchEvent(new Event("basesListChanged"));
                
                if (initialized)
                    updateSelectedBase();
            }
			
			//--------------------------------------------------------------------------
			// 
			//--------------------------------------------------------------------------
            
            public function set selectedBase(value:String):void
            {
                _selectedBaseId = value;
                
                if (initialized)
                    updateSelectedBase();
            }
            
            protected function creationCompleteHandler(event:FlexEvent):void
            {
                updateSelectedBase();
            }
            
            private function updateSelectedBase():void
            {
                if (_basesList && _selectedBaseId)
                {
                    for (var i:int = 0; i < _basesList.length; i++)
                    {
                        var base:BaseVO = BaseVO(_basesList[i]);
                        if (base.baseId == _selectedBaseId)
                        {
                            baseSelector.selectedIndex = i;
                            break;
                        }
                    }
                }
            }
			
			private function isOtherBaseSelected(base:BaseVO):Boolean
			{
				return base != null && base.baseId != _selectedBaseId;
			}
        ]]>
	</fx:Script>
</s:SkinnablePopUpContainer>
