<?xml version="1.0" encoding="utf-8"?>

<!-- Окно алерта -->

<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark"
						   xmlns:ui="views.ui.*"
						   creationComplete="creationCompleteHandler(event)"
                           filters="{proto.popUpShadow}">
	
	<s:BorderContainer>
		<s:layout>
			<s:VerticalLayout paddingLeft="15" paddingRight="15" paddingTop="15" paddingBottom="15" gap="15" horizontalAlign="center"/>
		</s:layout>
		
		<s:TextArea id="textArea" width="250" fontSize="14" editable="false" selectable="false"/>

        <s:HGroup id="buttonsContainer" horizontalAlign="center" width="100%" gap="2"/>
	</s:BorderContainer>
	
	<fx:Declarations>
        <s:Button id="okBn" label="@Resource(key='alert.ok', bundle='common')" width="100"
                  click="{close(false, Const.OK);}"/>
        <s:Button id="cancelBn" label="@Resource(key='alert.cancel', bundle='common')" width="100"
                  click="{close(false, Const.CANCEL);}"/>
        <s:Button id="yesBn" label="@Resource(key='alert.yes', bundle='common')" width="100"
                  click="{close(false, Const.YES);}"/>
        <s:Button id="noBn" label="@Resource(key='alert.no', bundle='common')" width="100"
                  click="{close(false, Const.NO);}"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.components.supportClasses.StyleableTextField;
			
			import dictionary.Const;
			
			//--------------------------------------------------------------------------
			// 
			//--------------------------------------------------------------------------
			
			public var _text:String;
            
            private var _buttonFlags:uint = Const.OK;
			
			//--------------------------------------------------------------------------
			// 
			//--------------------------------------------------------------------------
			
            public function set buttonFlags(value:uint):void
            {
                if (value == _buttonFlags)
                    return;
                
                _buttonFlags = value;
                
                if (initialized)
                    updateButtons();
            }
            
			public function set text(value:String):void
			{
				if (value == _text)
					return;
				
				_text = value;
				
				if (initialized)
					creationCompleteHandler(null);
			}
			
			public function get text():String
			{
				return _text;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				var textDisplay:StyleableTextField = StyleableTextField(textArea.textDisplay);
				textDisplay.htmlText = _text;
				
				var numLines:int = textDisplay.numLines;
				var h:Number = textArea.getStyle("paddingTop") + textArea.getStyle("paddingBottom");
				for (var i:int = 0; i < numLines; i++)
					h += textDisplay.getLineMetrics(i).height;
				textArea.height = h;
                
                updateButtons();
			}
            
            private function updateButtons():void
            {
                buttonsContainer.removeAllElements();
                
                if (_buttonFlags & Const.OK)
                    buttonsContainer.addElement(okBn);
                
                if (_buttonFlags & Const.YES)
                    buttonsContainer.addElement(yesBn);
                
                if (_buttonFlags & Const.NO)
                    buttonsContainer.addElement(noBn);
                
                if (_buttonFlags & Const.CANCEL)
                    buttonsContainer.addElement(cancelBn);
                
                if (buttonsContainer.numElements == 0)
                    buttonsContainer.addElement(okBn);
            }
			
		]]>
	</fx:Script>
</s:SkinnablePopUpContainer>
