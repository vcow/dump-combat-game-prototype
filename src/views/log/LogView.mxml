<?xml version="1.0" encoding="utf-8"?>

<!-- Окно сообщений -->

<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                           xmlns:s="library://ns.adobe.com/flex/spark"
                           creationComplete="creationCompleteHandler(event)"
                           filters="{proto.popUpShadow}">
    
    <s:BorderContainer>
        <s:layout>
            <s:VerticalLayout gap="10" paddingBottom="1" paddingLeft="1" paddingRight="1"
                              paddingTop="1"/>
        </s:layout>
        
        <s:BorderContainer width="100%" minHeight="0" backgroundColor="gray" borderVisible="false">
            <s:layout>
                <s:HorizontalLayout verticalAlign="middle" paddingBottom="5" paddingLeft="5"
                                  paddingRight="5" paddingTop="5" gap="0"/>
            </s:layout>
            
            <s:Label color="white" text="@Resource(key='log.title', bundle='common')" width="100%" textAlign="center"/>
            
            <s:Button skinClass="views.log.CloseButtonSkin" click="{close();}"/>
        </s:BorderContainer>
        
        <s:Scroller height="{calcHeight}" id="logScroller">
            <s:DataGroup dataProvider="{logData}" itemRenderer="views.log.LogListItemRenderer">
                <s:layout>
                    <s:VerticalLayout gap="0"/>
                </s:layout>
            </s:DataGroup>
        </s:Scroller>
    </s:BorderContainer>
    
    <fx:Declarations>
    </fx:Declarations>
    
    <fx:Metadata>
        [ResourceBundle("common")]
    </fx:Metadata>
    
    <fx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import mx.events.FlexEvent;
            import mx.events.PropertyChangeEvent;
            
            //--------------------------------------------------------------------------
            // 
            //--------------------------------------------------------------------------
            
            [Bindable]
            public var logData:ArrayCollection;
            
            [Bindable (event="calcHeightChanged")]
            public function get calcHeight():Number
            {
                if (stage)
                    return stage.stageHeight < 800 ? Math.max(20, stage.stageHeight - 100) : 700;
                else
                    addEventListener(Event.ADDED_TO_STAGE, addedToStageHandler);
                return NaN;
            }
            
            //--------------------------------------------------------------------------
            // 
            //--------------------------------------------------------------------------
            
            private function addedToStageHandler(event:Event):void
            {
                removeEventListener(Event.ADDED_TO_STAGE, addedToStageHandler);
                dispatchEvent(new Event("calcHeightChanged"));
            }
            
            private function viewport_propertyChangeHandler(event:PropertyChangeEvent):void
            {
                switch(event.property) 
                {
                    case "contentHeight":
                        logScroller.viewport.verticalScrollPosition = Number(event.newValue) - logScroller.height;
                        break;
                }
            }
            
            protected function creationCompleteHandler(event:FlexEvent):void
            {
                if (logData)
                    logScroller.viewport.verticalScrollPosition = logScroller.viewport.contentHeight - logScroller.viewport.height;
                
                logScroller.viewport.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, viewport_propertyChangeHandler);
            }
            
        ]]>
    </fx:Script>
</s:SkinnablePopUpContainer>
