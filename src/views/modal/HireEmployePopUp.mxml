<?xml version="1.0" encoding="utf-8"?>

<!-- Интерфейс найма нового сотрудника -->

<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
						   xmlns:s="library://ns.adobe.com/flex/spark"
						   xmlns:ui="views.ui.*"
                           xmlns:dropDownList="com.flextras.mobile.dropDownList.*"
                           creationComplete="creationCompleteHandler(event)">
	
	<s:BorderContainer>
		<s:layout>
			<s:VerticalLayout gap="10" paddingBottom="1" paddingLeft="1" paddingRight="1"
							  paddingTop="1"/>
		</s:layout>
		
		<s:BorderContainer width="100%" minHeight="0" backgroundColor="gray" borderVisible="false">
			<s:layout>
				<s:VerticalLayout horizontalAlign="center" paddingBottom="5" paddingLeft="5"
								  paddingRight="5" paddingTop="5"/>
			</s:layout>
			
			<s:Label color="white" text="@Resource(key='hire.popup.title', bundle='common')"/>
		</s:BorderContainer>
        
        <s:VGroup width="100%" gap="10" horizontalAlign="center" paddingBottom="5" paddingLeft="5"
                  paddingRight="5" paddingTop="5">
            
            <s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
                <s:Button label="&lt;"/>
                
                <s:BorderContainer width="100" height="100"/>
                
                <s:Button label=">"/>
            </s:HGroup>
            
            <s:TextInput id="employeeNameInput" text="{employeeName}" width="250" maxChars="25" focusAlpha="0"
                         change="{hireEnabled = StringUtil.trim(employeeNameInput.text).length > 0;}"
                         restrict="@Resource(key='restrict.name', bundle='common')"/>
            
            <s:VGroup width="100%" gap="3" horizontalAlign="center">
                <s:Label text="@Resource(key='hire.popup.prof', bundle='common')"/>
                
                <dropDownList:DropDownList id="profSelector" width="100%" dataProvider="{professionsList}"
                                           labelField="professionName"/>
            </s:VGroup>
            
            <s:HGroup width="100%">
                <s:Button width="50%" label="@Resource(key='hire.popup.hire', bundle='common')"
                          click="{close(false, Const.OK);}" enabled="{hireEnabled}"/>
                
                <s:Button width="50%" label="@Resource(key='new.base.popup.cancel', bundle='common')"
                          click="{close(false, Const.CANCEL);}"/>
            </s:HGroup>
        </s:VGroup>
        
		<ui:SimpleResourcesView/>
	</s:BorderContainer>
	
	<fx:Declarations>
	</fx:Declarations>
    
    <fx:Metadata>
        [ResourceBundle("common")]
    </fx:Metadata>
	
	<fx:Script>
		<![CDATA[
            import mx.collections.ArrayCollection;
            import mx.events.FlexEvent;
            import mx.utils.StringUtil;
            
            import dictionary.Const;
            
            import vo.PriceVO;
            import vo.ProfessionDescVO;
            
			//--------------------------------------------------------------------------
			// 
			//--------------------------------------------------------------------------
			
            private var _defaultProfession:int;
            private var _professionsList:ArrayCollection;
            
            [Bindable]
            private var hireEnabled:Boolean;
            
            [Bindable]
            public var employeeName:String;
            
            [Bindable (event="professionsListChanged")]
            public function get professionsList():ArrayCollection
            {
                return _professionsList;
            }
            
            public function set professionsList(value:ArrayCollection):void
            {
                if (value == _professionsList)
                    return;
                
                _professionsList = value;
                dispatchEvent(new Event("professionsListChanged"));
                
                if (initialized)
                    setDefaultProfession();
            }
            
            //--------------------------------------------------------------------------
            // 
            //--------------------------------------------------------------------------
            
			[Bindable]
			private var price:PriceVO;
            
            [Bindable]
            private var currentProfIndex:int;
            
			//--------------------------------------------------------------------------
			// 
			//--------------------------------------------------------------------------
			
            public function set defaultProfession(value:uint):void
            {
                if (value == _defaultProfession)
                    return;
                
                _defaultProfession = value;
                
                if (initialized)
                    setDefaultProfession();
            }
            
            private function setDefaultProfession():void
            {
                var index:int = -1;
                if (professionsList)
                {
                    for (var i:int = 0; i < professionsList.length; i++)
                    {
                        var prof:ProfessionDescVO = ProfessionDescVO(professionsList[i]);
                        if (prof.professionId == _defaultProfession)
                        {
                            index = i;
                            break;
                        }
                    }
                }
                profSelector.selectedIndex = index;
            }
            
            protected function creationCompleteHandler(event:FlexEvent):void
            {
                setDefaultProfession();
            }
        ]]>
	</fx:Script>
</s:SkinnablePopUpContainer>
